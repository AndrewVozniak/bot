from glob import glob
import telebot
import random
import config
from telebot import *
import requests
import handlers.generator as gen
from telebot.types import ReplyKeyboardMarkup


token = config.BOT_TOKEN
bot = telebot.TeleBot(token)
city_index = None 
price = 0
product = None
captcha_string = None
id_list = []

# def checkList(data, list):                        #!!! CAPTCHA
#     for x in list:
#         if int(data) == int(x):
#             return 1
#         else:
#             pass

# def parseChatID():
#     global id_list
#     try:
#         with open('storage/id.txt', 'r', encoding='utf-8') as file:
#             id_list = [f"{x}" for x in file]
#             id_list = list(map(lambda s: s.strip(), id_list))
#     except: 
#         with open('storage/id.txt', 'w+', encoding='utf-8') as file:
#             id_list = [f"{x}" for x in file]
#             id_list = list(map(lambda s: s.strip(), id_list))
    

# def saveChatID(message):
#     if checkList(message.chat.id, id_list) != 1:      
#         with open('storage/id.txt', 'w', encoding='utf-8') as file:  
#             if bool(id_list) == True:
#                 for i in id_list:
#                     file.write(f"{i}\n")

#                 file.write(f"{message.chat.id}")
#                 return True
#             else:
#                 file.write(f"{message.chat.id}")
#                 return False
#     else:
#         pass

def paymentChoise(message, purchase):
    keyboard = telebot.types.InlineKeyboardMarkup()
    # keyboard.add(types.InlineKeyboardButton("–ö–æ–¥–æ–º", callback_data="code"))
    keyboard.add(types.InlineKeyboardButton("–û–ø–ª–∞—Ç–∞ –Ω–∞ –∫–∞—Ä—Ç—Éüí≥", callback_data="card"))
    keyboard.add(types.InlineKeyboardButton("Bitcoin", callback_data="btc"))
    # keyboard.add(types.InlineKeyboardButton("Litecoin", callback_data="ltc"))
    keyboard.add(types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="cancel"))

    if(purchase):
        bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, reply_markup=keyboard, text=f"""–ß–µ–º –≤—ã –±—É–¥–µ—Ç–µ –æ–ø–ª–∞—á–∏–≤–∞—Ç—å:""")
        return None

    bot.send_message(chat_id=message.chat.id, reply_markup=keyboard, text=f"""–ß–µ–º –≤—ã –±—É–¥–µ—Ç–µ –æ–ø–ª–∞—á–∏–≤–∞—Ç—å:""")

# –ü–∞—Ä—Å–∏–º –∏–¥ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤–æ –∏–∑–±–µ–∂–∞–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –∫–∞–ø—á–∏
# * CHATBOT function
def startMsg(message):    
    # —Å–æ–∑–¥–∞—ë–º —Å—Ç–∞—Ä—Ç –∫–Ω–æ–ø–∫–∏
    keyboard = telebot.types.InlineKeyboardMarkup(row_width=2)

    # –¥–æ–±–∞–≤–ª—è–µ–º –≥–æ—Ä–æ–¥–∞
    cities_list = [types.InlineKeyboardButton(i, callback_data=f"city-{i}") for i in config.CITIES]

    # –¥–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø—É–Ω–∫—Ç—ã –º–µ–Ω—é
    balance = types.InlineKeyboardButton('–ë–∞–ª–∞–Ω—Å (0—Ä—É–±.)', callback_data='balance')
    bots = types.InlineKeyboardButton('–ú–æ–∏ –±–æ—Ç—ã', callback_data='bots')
    refferal = types.InlineKeyboardButton('–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–∞', callback_data='refferal')
    latest = types.InlineKeyboardButton('–ü–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–∫–∞–∑', callback_data='latest')
    bonus = types.InlineKeyboardButton('–ë–æ–Ω—É—Å', callback_data='bonus')
    website = types.InlineKeyboardButton('üê∫üê∫üê∫–ù–ê–® –°–ê–ô–¢üê∫üê∫üê∫', url=config.WEBSITE)
    operator = types.InlineKeyboardButton('üê∫‚öúÔ∏è–û–ü–ï–†–ê–¢–û–†‚öúÔ∏èüê∫', url=config.OPERATOR)
    support = types.InlineKeyboardButton('‚öôÔ∏èüëÅ‚Äçüó®–°–ê–ü–ü–û–†–¢üëÅ‚Äçüó®‚öôÔ∏è', url=config.SUPPORT)
    reviews = types.InlineKeyboardButton('üí¨üìù–û–¢–ó–´–í–´üìùüí¨', url=config.REVIEWS)
    work = types.InlineKeyboardButton('üê∫‚öúÔ∏è–†–ê–ë–û–¢–ê‚öúÔ∏èüê∫', url=config.WORK)

    keyboard.add(*cities_list)
    keyboard.add(balance)
    keyboard.add(bots)
    keyboard.add(refferal)
    keyboard.add(latest)
    keyboard.add(bonus)
    keyboard.add(website)
    keyboard.add(operator)
    keyboard.add(support)
    keyboard.add(reviews)
    keyboard.add(work)

    bot.send_message(chat_id=message.chat.id, reply_markup=keyboard, text=f"""–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≥–æ—Ä–æ–¥""")


@bot.message_handler(content_types='text')
def checkUser(message):
    global id_list
    # parseChatID() #!!! CAPTCHA
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ id.txt. –ï—Å–ª–∏ –æ–Ω –µ—Å—Ç—å –¥–∞–µ–º —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏–Ω–∞—á–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –≤–≤–µ—Å—Ç–∏ –∫–∞–ø—á—É  #!!! CAPTCHA
    # if checkList(message.chat.id, id_list) == 1: #!!! CAPTCHA
    startMsg(message) 
    # else: #!!! CAPTCHA
    #     bot.register_next_step_handler(message, captcha_message) 

# def captcha_message(message): #!!! CAPTCHA
#     global captcha_string

#     captcha_string = gen.generate_captcha(6)
#     bot.send_photo(message.chat.id, open("storage/captcha.png", "rb"), caption='–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å –∫–∞—Ä—Ç–∏–Ω–∫–∏:')
#     bot.register_next_step_handler(message, check_captcha)


# def check_captcha(message): #!!! CAPTCHA
    # if captcha_string == message.text:
    #     saveChatID(message)
    #     bot.send_message(message.chat.id, "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º. –í—ã –≤–µ—Ä–Ω–æ –≤–≤–µ–ª–∏ –∫–∞–ø—á—É!")
    #     startMsg(message)
    # else:
    #     bot.send_message(message.chat.id, "–¢–µ–∫—Å—Ç –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑")
    #     captcha_message(message)

def payMsg(message):
    global price
    price = message.text
    
    paymentChoise(message, False)


# * HANDLERS
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    global city_index
    global price
    global product 

    if call.message:
        if call.data.startswith('city-'):
            # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≥–æ—Ä–æ–¥–∞
            counter = 0

            # —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
            msg = call.data.partition('-')[2]
            msg = msg[0:30]
            
            for i in config.CITIES:
                counter += 1
                if msg == i[0:30]:
                    # —Å–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ —Ç–æ–≤–∞—Ä–∞
                    keyboard = telebot.types.InlineKeyboardMarkup()
                    city_index = config.CITIES.index(i)
                    counter -= 1

                    for x in config.PRODUCTS[city_index]:
                        s = x[::-1]
                        s = s[0:30]
                        s = s[::-1]

                        localPrice = config.PRODUCTS[city_index][x]["price"]
                        keyboard.add(types.InlineKeyboardButton(f"{x}({localPrice}—Ä—É–±.)", callback_data=f"product-{s}"))    
                    
                    if(keyboard.keyboard):
                        bot.send_message(call.message.chat.id, reply_markup=keyboard, text=f"""–ö–∞–∫–æ–π –≤–∞–º –ø—Ä–æ–¥—É–∫—Ç? üíéüíä‚òòÔ∏èüçö""")
                    else:
                        bot.send_message(call.message.chat.id, reply_markup=keyboard, text=f"""–¢–æ–≤–∞—Ä –∑–∞–∫–æ–Ω—á–∏–ª—Å—è""")

                    return city_index

        if call.data.startswith('product-'):
            # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–∞–π–æ–Ω—ã
            msg = call.data.partition('-')[2]

            try:
                for i in list(config.PRODUCTS[city_index].keys()):
                    #–æ–±—Ä–µ–∑–∞–µ–º 30 —Å–∏–º–≤–æ–ª–æ–≤ —Å –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–æ–∫–∏
                    s = i[::-1]
                    s = s[0:30]
                    s = s[::-1]

                    # –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç.–¥–∞–Ω–Ω—ã–µ
                    if msg == s:
                        # —Å–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ —Ä–∞–π–æ–Ω–æ–≤
                        keyboard = telebot.types.InlineKeyboardMarkup()

                        # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω ( –¥–ª—è –ø–æ—Å–ª–µ–¥.–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è )
                        price = config.PRODUCTS[city_index][i]["price"]
                        product = i
                        
                        for x in config.PRODUCTS[city_index][i]["regions"]:
                            keyboard.add(types.InlineKeyboardButton(x, callback_data="region"))
                        
                        keyboard.add(types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="cancel"))

                        city_index = None
                        bot.send_message(call.message.chat.id, reply_markup=keyboard, text=f"""üê∫üè¢–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–π–æ–Ωüè¢üê∫""")
                        return city_index

            except: 
                bot.send_message(call.message.chat.id, text=f"""–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É""")

        if call.data == "region":
            keyboard = telebot.types.InlineKeyboardMarkup()
            keyboard.add(types.InlineKeyboardButton("–û–ø–ª–∞—Ç–∏—Ç—å", callback_data="pay"))
            keyboard.add(types.InlineKeyboardButton("–û—Ç–º–µ–Ω–∞", callback_data="cancel"))
            
            bot.send_message(call.message.chat.id, reply_markup=keyboard, text=f"""–ó–∞—è–≤–∫–∞ ‚Ññ{random.randrange(100, 3000)}
–¢–æ–≤–∞—Ä –∏ –æ–±—ä–µ–º <b>{product}</b>
–û–ø–ª–∞—Ç–∏—Ç–µ {price} —Ä—É–±.
–î–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –û–ü–õ–ê–¢–ò–¢–¨
–£ –≤–∞—Å –µ—Å—Ç—å 2 –ß–ê–°–ê –Ω–∞ –æ–ø–ª–∞—Ç—É, –ø–æ—Å–ª–µ —á–µ–≥–æ –∑–∞—è–≤–∫–∞ –±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–µ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏""", parse_mode='html') 

            product = None
            return product

        if call.data == "cancel":
            startMsg(call.message)

        if call.data == "pay":
            paymentChoise(call.message, True)
            
        if call.data == "code":
            bot.send_message(call.message.chat.id, reply_markup=keyboard, text=f"""–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã""") 
            price = 0
            startMsg(call.message)

        if call.data == "card":
            keyboard = telebot.types.InlineKeyboardMarkup()
            keyboard.add(types.InlineKeyboardButton("–ü—Ä–æ–±–ª–µ–º–∞ —Å –æ–ø–ª–∞—Ç–æ–π", callback_data="payProblem"))
            keyboard.add(types.InlineKeyboardButton("–ù–∞ –≥–ª–∞–≤–Ω—É—é", callback_data="cancel"))
            ID = random.randrange(10000, 1000000)

            bot.send_message(call.message.chat.id, f"""‚úÖ –í–´–î–ê–ù–ù–´–ï –†–ï–ö–í–ò–ó–ò–¢–´ –î–ï–ô–°–¢–í–£–Æ–¢ 30 –ú–ò–ù–£–¢
‚úÖ –í–´ –ü–û–¢–ï–†–Ø–ï–¢–ï –î–ï–ù–¨–ì–ò, –ï–°–õ–ò –û–ü–õ–ê–¢–ò–¢–ï –ü–û–ó–ñ–ï
‚úÖ –ü–ï–†–ï–í–û–î–ò–¢–ï –¢–û–ß–ù–£–Æ –°–£–ú–ú–£. –ù–ï–í–ï–†–ù–ê–Ø –°–£–ú–ú–ê –ù–ï –ë–£–î–ï–¢ –ó–ê–ß–ò–°–õ–ï–ù–ê.
‚úÖ –û–ü–õ–ê–¢–ê –î–û–õ–ñ–ù–ê –ü–†–û–•–û–î–ò–¢–¨ –û–î–ù–ò–ú –ü–õ–ê–¢–ï–ñ–û–ú.
‚úÖ –ü–†–û–ë–õ–ï–ú–´ –° –û–ü–õ–ê–¢–û–ô? –ü–ò–°–ê–¢–¨ –í TELEGRAM : {config.SUPPORT}
–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —á–µ–∫ –æ–± –æ–ø–ª–∞—Ç–µ –∏
ID: {ID}
‚úÖ –° –ü–†–û–ë–õ–ï–ú–ù–û–ô –ó–ê–Ø–í–ö–û–ô –û–ë–†–ê–©–ê–ô–¢–ï–°–¨ –ù–ï –ü–û–ó–î–ù–ï–ï 24 –ß–ê–°–û–í –° –ú–û–ú–ï–ù–¢–ê –û–ü–õ–ê–¢–´.""")       
            bot.send_message(call.message.chat.id, f"""‚úÖ–ó–∞—è–≤–∫–∞ ‚Ññ {ID}. –ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫—É—é  –∫–∞—Ä—Ç—É {price} —Ä—É–±–ª–µ–π —É–¥–æ–±–Ω—ã–º –¥–ª—è –≤–∞—Å —Å–ø–æ—Å–æ–±–æ–º. –í–∞–∂–Ω–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å —Ä–æ–≤–Ω—É—é —Å—É–º–º—É.
{config.CARD_NUMBER}
‚ÄºÔ∏è —É –≤–∞—Å –µ—Å—Ç—å 30 –º–∏–Ω –Ω–∞ –æ–ø–ª–∞—Ç—É, –ø–æ—Å–ª–µ —á–µ–≥–æ –ø–ª–∞—Ç—ë–∂ –Ω–µ –±—É–¥–µ—Ç –∑–∞—á–∏—Å–ª–µ–Ω
‚ÄºÔ∏è –ø–µ—Ä–µ–≤—ë–ª –Ω–µ—Ç–æ—á–Ω—É—é —Å—É–º–º—É - –æ–ø–ª–∞—Ç–∏–ª —á—É–∂–æ–π –∑–∞–∫–∞–∑""")       

            bot.send_message(call.message.chat.id, f"""–ï—Å–ª–∏ –≤ —Ç–µ—á–µ–Ω–∏–∏ —á–∞—Å–∞ —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–µ –≤—ã–¥–∞–ª–∏—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É - "–ü—Ä–æ–±–ª–µ–º–∞ —Å –æ–ø–ª–∞—Ç–æ–π" """, reply_markup=keyboard)   

            price = 0
            return price

        if call.data == "btc":
            r = requests.get('https://blockchain.info/ticker')
            bitprice = int((r.json()['RUB']['buy']))

            actual = '{:f}'.format(price / bitprice)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"""–û–ø–ª–∞—Ç–∏—Ç–µ {actual} BTC –Ω–∞ –∞–¥—Ä–µ—Å {config.BTC}""")       

        # if call.data == "ltc":
        #     actual = '{:f}'.format(price / 10145)
        #     bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"""–û–ø–ª–∞—Ç–∏—Ç–µ {actual} LTC –Ω–∞ –∞–¥—Ä–µ—Å {config.LTC}""")  

        if call.data == 'balance':
            bot.send_message(call.message.chat.id, text=f'–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å')
            bot.register_next_step_handler(call.message, payMsg)
            
        if call.data == 'payProblem':
            bot.answer_callback_query(callback_query_id=call.id, text="–ü–æ–¥–æ–∂–¥–∏—Ç–µ 30 –º–∏–Ω—É—Ç —Å –Ω–∞—á–∞–ª–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è, –≤ —Å–ª—É—á–∞–µ –Ω–µ–ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–Ω–æ–π –æ–ø–ª–∞—Ç—ã —Å–∞–ø–ø–æ—Ä—Ç—É", show_alert=True)

        if call.data == 'bonus':
            bot.answer_callback_query(callback_query_id=call.id, text="–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–Ω—É—Å–∞ —Å–æ–≤–µ—Ä—à–∏—Ç–µ 5 –ø–æ–∫—É–ø–æ–∫ –≤ —Ç–µ—á–µ–Ω–∏–∏ –Ω–µ–¥–µ–ª–∏", show_alert=True)


        if call.data == "latest":
            bot.send_message(call.message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤")

        if call.data == "refferal":
            keyboard = telebot.types.InlineKeyboardMarkup()
            keyboard.add(types.InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞", callback_data="addBot"))

            bot.send_message(call.message.chat.id, """–î–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ –±–æ—Ç–∞–º–∏ —Å –¥—Ä—É–∑—å—è–º–∏ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ 50—Ä—É–±. —Å –∫–∞–∂–¥–æ–≥–æ –µ–≥–æ –æ–ø–ª–∞—á–µ–Ω–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞.
–í–∞—à–∏ –±–æ—Ç—ã:
–£ –≤–∞—Å –Ω–µ—Ç—É –±–æ—Ç–æ–≤!""", reply_markup=keyboard)

        if call.data == "addBot":
            keyboard = telebot.types.InlineKeyboardMarkup()
            keyboard.add(types.InlineKeyboardButton("–ù–∞ –≥–ª–∞–≤–Ω—É—é", callback_data="cancel"))

            bot.send_message(call.message.chat.id, """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞ –¥–æ—Å—Ç—É–ø–Ω–æ –æ—Ç 10-—Ç–∏ –ø–æ–∫—É–ø–æ–∫""", reply_markup=keyboard)

        if call.data == "bots":
            keyboard = telebot.types.InlineKeyboardMarkup()
            keyboard.add(types.InlineKeyboardButton("–ù–∞ –≥–ª–∞–≤–Ω—É—é", callback_data="cancel"))

            bot.send_message(call.message.chat.id, """–í–∞—à–∏ –±–æ—Ç—ã:
–£ –≤–∞—Å –Ω–µ—Ç –±–æ—Ç–æ–≤!""", reply_markup=keyboard)

if __name__ == '__main__':
    bot.infinity_polling()